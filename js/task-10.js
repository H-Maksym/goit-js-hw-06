//TODO ‚úÖ
/*
–ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ –æ—á–∏—â–µ–Ω–Ω—è –∫–æ–ª–µ–∫—Ü—ñ—ó –µ–ª–µ–º–µ–Ω—Ç—ñ–≤. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –≤ input —ñ –Ω–∞—Ç–∏—Å–∫–∞—î –∫–Ω–æ–ø–∫—É –°—Ç–≤–æ—Ä–∏—Ç–∏, –ø—ñ—Å–ª—è —á–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å—Å—è –∫–æ–ª–µ–∫—Ü—ñ—è.–ù–∞—Ç–∏—Å–Ω–µ–Ω–Ω—è–º –Ω–∞ –∫–Ω–æ–ø–∫—É –û—á–∏—Å—Ç–∏—Ç–∏, –∫–æ–ª–µ–∫—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –æ—á–∏—â–∞—î—Ç—å—Å—è.


–°—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é createBoxes(amount), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä - —á–∏—Å–ª–æ. –§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä—é—î —Å—Ç—ñ–ª—å–∫–∏ <div>, —Å–∫—ñ–ª—å–∫–∏ –≤–∫–∞–∑–∞–Ω–æ –≤ amount —ñ –¥–æ–¥–∞—î —ó—Ö —É div#boxes.

–†–æ–∑–º—ñ—Ä–∏ –Ω–∞–π–ø–µ—Ä—à–æ–≥–æ <div> - 30px –Ω–∞ 30px.
–ö–æ–∂–µ–Ω –µ–ª–µ–º–µ–Ω—Ç –ø—ñ—Å–ª—è –ø–µ—Ä—à–æ–≥–æ –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ —à–∏—Ä—à–∏–º —ñ –≤–∏—â–∏–º –≤—ñ–¥ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –Ω–∞ 10px.
–í—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –ø–æ–≤–∏–Ω–Ω—ñ –º–∞—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –∫–æ–ª—ñ—Ä —Ñ–æ–Ω—É —É —Ñ–æ—Ä–º–∞—Ç—ñ HEX. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –≥–æ—Ç–æ–≤—É —Ñ—É–Ω–∫—Ü—ñ—é getRandomHexColor –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–ª—å–æ—Ä—É.
function getRandomHexColor() {
  return `#${Math.floor(Math.random() * 16777215)
    .toString(16)
    .padStart(6, 0)}`;
}
–°—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é destroyBoxes(), —è–∫–∞ –æ—á–∏—â–∞—î –≤–º—ñ—Å—Ç div#boxes, —É —Ç–∞–∫–∏–π —Å–ø–æ—Å—ñ–± –≤–∏–¥–∞–ª—è—é—á–∏ –≤—Å—ñ —Å—Ç–≤–æ—Ä–µ–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏.
*/


// function getRandomHexColor() {
//   return `#${Math.round(Math.random() * 16777215).toString(16)}`;
// }


// –§—É–Ω–∫—Ü—ñ—è –º–æ–∂–µ –¥–∞–≤–∞—Ç–∏ –∑–±—ñ–π ‚õî
// –ü—Ä: –≥–µ–Ω–µ—Ä—É—î Math.floor((Math.random() * 16777215)) ‚û°  110102; ‚õî
//  (110102).toString(16) ‚û°  #1ae16 ; ‚õî
// #1ae16 –∫–æ–ª—ñ—Ä –Ω–µ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å https://encycolorpedia.com.ua/search?q=%231ae16


// üöÄ —Ä–µ–∞–ª—ñ–∑—É–≤–∞–≤ —ñ–Ω—à—É —Ñ—É–Ω–∫—Ü—ñ—é –∑ –∞–ª—å—Ñ–∞-–∫–∞–Ω–∞–ª–æ–º.

function getRandomRgbColor() {
  return `rgba(${Math.floor(Math.random() * 255)},${Math.floor(Math.random() * 255)},${Math.floor(Math.random() * 255)},${Math.random()}`;
}


const inputEl = document.querySelector("#controls").firstElementChild;
const divBoxesEl = document.querySelector("#boxes");
const btnCreate = document.querySelector("[data-create]")
const btnDestroy = document.querySelector("[data-destroy]")


btnCreate.addEventListener('click', () => createBoxes(inputEl.value));
btnDestroy.addEventListener('click', () => { divBoxesEl.innerHTML = ""; inputEl.value = "" })


const createBoxes = (amount) => {
  amount = Number(amount);
  const arrayDiv = [];
  let width = 20;
  let height = 20;

  for (let i = 1; i <= amount; i += 1) {

    if (divBoxesEl.lastElementChild) {
      width = parseInt(divBoxesEl.lastElementChild.style.width)
      height = parseInt(divBoxesEl.lastElementChild.style.width)
    }

    const divBoxes = document.createElement('div');
    divBoxes.style.width = (width + i * 10) + "px";
    divBoxes.style.height = (height + i * 10) + "px";
    divBoxes.style.backgroundColor = getRandomRgbColor();
    arrayDiv.push(divBoxes);
  }

  return divBoxesEl.append(...arrayDiv);

}






